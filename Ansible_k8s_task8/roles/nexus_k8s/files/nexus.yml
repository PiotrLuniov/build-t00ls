apiVersion: v1
kind: PersistentVolume
metadata:
  name: nexus-vol-pv-data
spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - master
  capacity: 
    storage: 1Gi
  accessModes: 
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /tmp/nexus
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nexus-vol-pvc-data
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 980Mi
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nexus-dep
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: nexus
    spec:
      containers:
      - name: nexus
        image: sonatype/nexus3
        resources:
          requests:
            memory: 1024Mi
          limits:
            memory: 2048Mi
        env:
        - name: INSTALL4J_ADD_VM_PARAMS
          value: "-Xmx2000m -XX:MaxPermSize=512m"

        ports:
        - name: nex-port1
          containerPort: 8081
        - name: nex-port2
          containerPort: 18079

        volumeMounts:
        - name: nexus-dep-data
          mountPath: /nexus-data
      volumes:
      - name: nexus-dep-data
        persistentVolumeClaim:
          claimName: nexus-vol-pvc-data
---

apiVersion: v1
kind: Service
metadata:
  name: nexus-svc
spec:
  selector:
    app: nexus
  ports:
  - name: nex-svc-port1
    port: 80
    targetPort: nex-port1
  - name: nex-svc-port2
    port: 18079
    targetPort: nex-port2
---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: my-ingress
  namespace: nexus
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: nexus
    http:
      paths:
      - path: /
        backend:
          serviceName: nexus-svc
          servicePort: nex-svc-port1
