apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonar-vol-pv-data
spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - jenkins
  capacity: 
    storage: 2Gi
  accessModes: 
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: "/opt/sonarqube/data/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonar-vol-pvc-data
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 2Gi
---


apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonar-vol-pv-ext
spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - jenkins
  capacity: 
    storage: 2Gi
  accessModes: 
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: "/opt/sonarqube/extensions/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonar-vol-pvc-ext
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 2Gi
---

apiVersion: v1
kind: Secret
metadata:
  name: postgres
type: Opaque
data:
  password: s29uYXI=
---


apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sonar-dep
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sonar
    spec:
      containers:
      - name: sonar
        image: sonarqube:7.1
        env:
        - name: sonar.jdbc.url
          value: jdbc:postgresql://postgres-svc.postgres.svc.cluster.local/sonar
        - name: sonar.jdbc.username
          value: sonar
        - name: sonar.jdbc.password
          valueFrom:
            secretKeyRef:
              name: postgres
              key: password

        ports:
        - name: son-port1
          containerPort: 9000

        volumeMounts:
        - name: sonar-dep-data
          mountPath: /opt/sonarqube/data/
        - name: sonar-dep-ext
          mountPath: /opt/sonarqube/extensions/
      volumes:
      - name: sonar-dep-data
        persistentVolumeClaim:
          claimName: sonar-vol-pvc-data
      - name: sonar-dep-ext
        persistentVolumeClaim:
          claimName: sonar-vol-pvc-ext
---


apiVersion: v1
kind: Service
metadata:
  name: sonar-svc
spec:
  selector:
    app: sonar
  type: LoadBalancer
  ports:
  - name: son-svc-port1
    port: 80
    targetPort: son-port1

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: sonar-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: sonar.k8s.local
    http:
      paths:
      - path: /
        backend:
          serviceName: sonar-svc
          servicePort: son-svc-port1













