apiVersion: v1
kind: Namespace
metadata:
  name: tomcat
  labels:
    name: tomcat

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat
  namespace: tomcat
  labels:
    app: tomcat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      containers:
      - name: tomcat
        image: "192.168.56.241:28082/helloworld-ashamchonak:rc-$BUILD_NUM"
        ports:
        - name: tomcatport
          containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: tomcat-service
  namespace: tomcat
spec:
  selector:
    app: tomcat
  type: LoadBalancer
  ports:
  - name: tomcatsvcport
    port: 8080
    targetPort: tomcatport

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: tomcat-ingress
  namespace: tomcat
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /helloworld-ws-$BUILD_NUM/
spec:
  rules:
  - host: tomcat.k8s.local
    http:
      paths:
      - path: /
        backend:
          serviceName: tomcat-service
          servicePort: tomcatsvcport


#kubectl apply  -f tomcat_new.yaml
#kubectl delete -f tomcat_new.yaml
#kubectl apply  -f tomcat_new.yaml
#
#sleep 30
#curl -i "host:helloworld" 192.168.56.242:8080/helloworld-ws-$BUILD_NUM/info.html
#curl -sH host:helloworld 192.168.56.242:8080/helloworld-ws-63/info.html | grep "Build number is" | cut -d\  -f12 | cut -d\< -f1
#
#CHECK=$(curl -IH "host:helloworld" 192.168.56.242:8080/helloworld-ws-$BUILD_NUM/info.html | grep 200)
#if [[$CHECK == ""]]
#then
# kubectl delete -f tomcat_new.yaml
# kubectl apply  -f tomcat_old.yaml
#fi
